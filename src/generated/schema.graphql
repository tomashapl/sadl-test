# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type AuthModel {
    accessToken: String!
    refreshToken: String!
}

type CarModel {
    brand: String!
    currency: String!
    fuel: String!
    groupId: String!
    id: Float!
    imageURL: String!
    location: CarModelLocation!
    model: String!
    pricePerDay: Float!
    registrationPlate: String!
    reservations: [CarModelReservation!]!
    status: String!
    subjectTypeId: Float!
    type: Type!
    year: String!
}

type CarModelLocation {
    latitude: Float!
    longitude: Float!
}

type CarModelModel {
    kodiaq: [CarModel!]
}

type CarModelReservation {
    from: DateTime!
    id: Float!
    to: DateTime!
}

type Mutation {
    createRental(values: RentalInput!): RentalModel!
    login(values: LoginInput!): SessionModel!
    refreshToken(refreshToken: String!): AuthModel!
    register(values: RegisterInput!): SessionModel!
}

type ProfileModel {
    createdAt: DateTime!
    email: String!
    firstName: String!
    id: Float!
    lastName: String!
    updatedAt: DateTime!
}

type Query {
    car(id: Float!): CarModel!
    cars: [CarModel!]!
    carsFromFirebase: CarModelModel!
    rentals: [RentalModel!]!
    user: ProfileModel!
}

type RentalModel {
    car: CarModel!
    from: DateTime!
    status: RentalStatus!
    subjectId: Float!
    to: DateTime!
}

type SessionModel {
    accessToken: String!
    profile: ProfileModel!
    refreshToken: String!
}

enum RentalStatus {
    APPROVED
    FINISHED
    PENDING
    REJECTED
    WAITING
}

enum Type {
    SUV
}

input LoginInput {
    email: String!
    password: String!
}

input RegisterInput {
    email: String!
    firstName: String!
    lastName: String!
    password: String!
}

input RentalInput {
    rentalFrom: DateTime!
    rentalTo: DateTime!
    subjectID: Float!
}


"The javascript `Date` as string. Type represents date and time as the ISO Date string."
scalar DateTime