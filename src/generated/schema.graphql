type Query {
  cars: [CarModel!]!
  car(id: Float!): CarModel!
  carsFromFirebase: CarModelModel!
  user: ProfileModel!
  rentals: [RentalModel!]!
}

type CarModel {
  id: Float!
  brand: String!
  model: String!
  currency: String!
  fuel: String!
  type: Type!
  groupId: String!
  location: CarModelLocation!
  imageURL: String!
  pricePerDay: Float!
  registrationPlate: String!
  status: String!
  subjectTypeId: Float!
  year: String!
  reservations: [CarModelReservation!]!
}

enum Type {
  SUV
}

type CarModelLocation {
  latitude: Float!
  longitude: Float!
}

type CarModelReservation {
  id: Float!
  from: DateTime!
  to: DateTime!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type CarModelModel {
  kodiaq: [CarModel!]
}

type ProfileModel {
  id: Float!
  firstName: String!
  lastName: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type RentalModel {
  from: DateTime!
  to: DateTime!
  subjectId: Float!
  status: String!
  car: CarModel!
}

type Mutation {
  refreshToken(refreshToken: String!): AuthModel!
  login(values: LoginInput!): SessionModel!
  register(values: RegisterInput!): SessionModel!
  createRental(values: RentalInput!): RentalModel!
}

type AuthModel {
  accessToken: String!
  refreshToken: String!
}

type SessionModel {
  accessToken: String!
  refreshToken: String!
  profile: ProfileModel!
}

input LoginInput {
  email: String!
  password: String!
}

input RegisterInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}

input RentalInput {
  subjectID: Float!
  rentalFrom: DateTime!
  rentalTo: DateTime!
}
